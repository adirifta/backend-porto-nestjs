name: Deploy NestJS to cPanel

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ⎔ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci --legacy-peer-deps

    - name: 🏗️ Build project
      run: |
        npm run build
        echo "✅ Build completed"

    - name: 📁 Create deployment package
      run: |
        mkdir -p deploy-dist
        # Copy built files
        cp -r dist/ deploy-dist/
        cp package.json deploy-dist/
        cp package-lock.json deploy-dist/
        
        # Create .env from secrets
        cat > deploy-dist/.env << 'ENVFILE'
        # Production Environment
        NODE_ENV=production
        PORT=${{ secrets.APP_PORT || 3000 }}
        
        # Database
        DB_HOST=${{ secrets.DB_HOST }}
        DB_PORT=${{ secrets.DB_PORT }}
        DB_USERNAME=${{ secrets.DB_USERNAME }}
        DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        DB_NAME=${{ secrets.DB_NAME }}
        
        # JWT
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}
        
        # CORS
        CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
        ENVFILE
        
        echo "📦 Deployment package ready"
        ls -la deploy-dist/

    - name: 🚀 FTP Deploy
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./deploy-dist/
        server-dir: ${{ secrets.FTP_DEPLOY_PATH }}