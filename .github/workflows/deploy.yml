name: ðŸš€ EMERGENCY Deploy - Fix 503 Error

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: ðŸ“¥ Checkout code
      uses: actions/checkout@v4

    - name: âŽ” Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: ðŸ“¦ Install & Build
      run: |
        npm ci
        npm run build
        
        # Test build locally
        timeout 10s node dist/main.js &
        sleep 5
        curl -f http://localhost:3000/api/health || echo "Build test completed"

    - name: ðŸŽ¯ Create SIMPLE Deployment
      run: |
        # Clean and create deployment
        rm -rf deploy
        mkdir deploy
        
        # Copy ONLY compiled files
        cp -r dist/* deploy/
        cp package.json deploy/
        cp package-lock.json deploy/
        
        # Create PROPER .env file
        cat > deploy/.env << 'ENVFILE'
        # Server Configuration
        NODE_ENV=production
        PORT=3000
        
        # Database
        DB_HOST=localhost
        DB_PORT=3306
        DB_USERNAME=${{ secrets.DB_USERNAME }}
        DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        DB_NAME=${{ secrets.DB_NAME }}
        DB_SYNCHRONIZE=false
        
        # JWT
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        JWT_EXPIRES_IN=1h
        JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}
        JWT_REFRESH_EXPIRES_IN=7d
        
        # CORS
        CORS_ORIGIN=https://backend-portofolio.adirdk.com
        ENVFILE
        
        # Create SIMPLE start script
        cat > deploy/start.sh << 'SCRIPT'
        #!/bin/bash
        echo "ðŸš€ STARTING NESTJS API..."
        
        # Install dependencies
        npm install --production
        
        # Start the application
        echo "ðŸ“¦ Starting application on port 3000..."
        node main.js
        SCRIPT
        
        chmod +x deploy/start.sh
        
        echo "âœ… Deployment package ready"
        ls -la deploy/

    - name: ðŸ“¤ Upload via FTP
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./deploy/
        server-dir: ${{ secrets.FTP_DEPLOY_PATH }}
        dangerous-clean-slate: true

    - name: ðŸ“‹ Manual Setup Commands
      run: |
        echo "ðŸŽ¯ MANUAL SETUP REQUIRED ON SERVER:"
        echo ""
        echo "1. SSH into your cPanel:"
        echo "   ssh your_user@your_server"
        echo ""
        echo "2. Run these commands:"
        echo "   cd ~/public_html/backend"
        echo "   npm install"
        echo "   node main.js"
        echo ""
        echo "3. Test if working:"
        echo "   curl http://localhost:3000/api/health"
        echo ""
        echo "4. For permanent run with PM2:"
        echo "   npm install -g pm2"
        echo "   pm2 start main.js --name portfolio-api"
        echo "   pm2 save"